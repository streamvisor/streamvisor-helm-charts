## @section Common parameters
## @descriptionStart
## Parameters shared among Streamvisor components
## @descriptionEnd

## @param nameOverride String to partially override name
nameOverride: ''

## @param fullnameOverride String to fully override name
fullnameOverride: ''

## @param namespace String to specify namespace to deploy in (if empty, defaults to .Release.Namespace (aka helm --namespace))
namespace: ''

## @param clusterDomain Kubernetes cluster domain name
clusterDomain: cluster.local

## @param labels Custom labels to add to all components
labels: {}

## @section Streamvisor deployment parameters
## @descriptionStart
## Parameters for Streamvisor deployment
## @descriptionEnd
deployment:
  image:
    ## @param deployment.image.repository Streamvisor image repository
    repository: ghcr.io/streamvisor/streamvisor
    ## @param deployment.image.tag Streamvisor image tag
    tag: 4.0.0
    ## @param deployment.image.imagePullPolicy Streamvisor imagePullPolicy
    imagePullPolicy: IfNotPresent
  ## @param deployment.nodeSelector Node labels for Streamvisor pod assignment
  nodeSelector: {}
  ## @param deployment.annotations Annotations for Streamvisor pod
  annotations: {}
  ## @param deployment.tolerations Tolerations for Streamvisor pod assignment
  tolerations: []
  ## @param deployment.gracePeriod Seconds in which pod needs to terminate gracefully
  gracePeriod: 30
  resources:
    requests:
      ## @param deployment.resources.requests.memory Memory request for the Streamvisor pod
      memory: 1Gi
      ## @param deployment.resources.requests.cpu CPU request for the Streamvisor pod
      cpu: 1000m
    limits:
      ## @param deployment.resources.limits.memory Memory limit for the Streamvisor pod
      memory: 2Gi
      ## @param deployment.resources.limits.cpu CPU limit for the Streamvisor pod
      cpu: 2000m
  ## @param deployment.extraVolumeMounts Extra volume mounts to add to the deployment spec, for example to mount TLS certificates
  ## e.g.
  ## - name: tls-secrets
  ##   readOnly: true
  ##   mountPath: /streamvisor/tls
  extraVolumeMounts:

  ## @param deployment.extraVolumes Extra volumes to add to the deployment spec, for example to mount TLS certificates
  ## e.g.
  ## - name: tls-secrets
  ##   secret:
  ##   secretName: pulsar-tls
  extraVolumes:

## @section Streamvisor configuration properties
## @descriptionStart
## Refer to our [documentation](https://docs.streamvisor.com/installation/configuration/) for the full list of configuration properties
## @descriptionEnd
## @param config Configuration properties to mount as environment variables
## e.g.
## STREAMVISOR_ENVIRONMENTS_0_NAME: "development"
## STREAMVISOR_ENVIRONMENTS_0_SERVICEURL: "http://pulsar-proxy:8080"
## STREAMVISOR_ENVIRONMENTS_0_BROKERURL: "pulsar://pulsar-proxy:6650"
config:

## @section Streamvisor persistence parameters
## @descriptionStart
## Parameters for Streamvisor persistence
## When using PostgreSQL instead of the default filesystem storage, please set `persistence.enabled` to false and configure your PostgreSQL connection using the following env variables in the `config` block:
## ```
## STREAMVISOR_PERSISTENCE_URL=jdbc:postgresql://<host>:<port>/streamvisor
## STREAMVISOR_PERSISTENCE_DRIVERCLASSNAME=org.postgresql.Driver
## STREAMVISOR_PERSISTENCE_USERNAME=postgres
## STREAMVISOR_PERSISTENCE_PASSWORD=postgres
## ```
## @descriptionEnd
persistence:
  ## @param persistence.enabled If true, persists Streamvisor data to a PersistentVolumeClaim. Please always enable this in a production setup!
  enabled: false
  ## @param persistence.existingClaim If set use existing volume claim with specified name instead of provisioning one
  existingClaim:
  ## @param persistence.annotations Annotations for Streamvisor PersistentVolumeClaim
  annotations: {}
  ## @param persistence.accessModes Access modes for Streamvisor PersistentVolumeClaim
  accessModes:
    - ReadWriteOnce
  ## @param persistence.size Size for Streamvisor PersistentVolumeClaim
  size: 1Gi
  ## @param persistence.storageClass Storage class name for Streamvisor PersistentVolumeClaim
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined or set to null, no storageClassName spec is set, using the default provisioner (gp2 on AWS, standard on GKE, AWS & OpenStack).
  storageClass:

## @section Streamvisor credentials secret parameters
## @descriptionStart
## Parameters for Streamvisor credentials secret
## @descriptionEnd
secretCredentials:
  ## @param secretCredentials.existingSecretName If set use existing credentials secret with specified name instead of provisioning one
  existingSecretName:
  admin:
    ## @param secretCredentials.admin.email Streamvisor admin email
    email: admin@example.org
    ## @param secretCredentials.admin.password Streamvisor admin password
    password: pulsar

## @section Streamvisor service parameters
## @descriptionStart
## Parameters for Streamvisor service
## @descriptionEnd
service:
  ## @param service.type Streamvisor service type
  type: ClusterIP
  ## @param service.port Streamvisor service port
  port: 8888
  ## @param service.targetPort Streamvisor service target port
  targetPort: 8888
  ## @param service.annotations Streamvisor service annotation
  annotations: {}

## @section Streamvisor NetworkPolicy parameters
## @descriptionStart
## Parameters for Streamvisor NetworkPolicy
## @descriptionEnd
networkPolicy:
  ## @param networkPolicy.annotations Streamvisor NetworkPolicy annotations
  annotations: {}
  ## @param networkPolicy.ingress [default: - {}] List of ingress rules to be applied to the Streamvisor pod (default allows all ingress traffic)
  ingress:
    - {}
  ## @param networkPolicy.egress [default: - {}] List of egress rules to be applied to the Streamvisor pod (default allows all egress traffic)
  egress:
    - {}

## @section Streamvisor Route parameters
## @descriptionStart
## Parameters for Streamvisor Route in OpenShift environments. If you are not running on OpenShift, please refer to the Ingress section instead.
## @descriptionEnd
route:
  ## @param route.enabled If true, provisions an OpenShift Route for Streamvisor
  enabled: false
  ## @param route.annotations Streamvisor Route annotations
  annotations: {}
  ## @param route.host Optional. Alias/DNS pointing to the service
  host: ''
  ## @param route.tls Optional. TLSConfig to secure route and provide termination
  tls: {}

## @section Streamvisor ingress parameters
## @descriptionStart
## Parameters for Streamvisor ingress
## @descriptionEnd
ingress:
  ## @param ingress.enabled If true, provisions an ingress for Streamvisor
  enabled: false
  ## @param ingress.annotations Streamvisor ingress annotations
  annotations: {}
  ## @param ingress.ingressClassName Streamvisor ingress class name
  ingressClassName: ''
  tls:
    ## @param ingress.tls.enabled If true, enable TLS configuration
    enabled: false
    ## @param ingress.tls.secretName Optional. Leave it blank if your Ingress Controller can provide a default certificate
    secretName: ''
  ## @param ingress.hostname Streamvisor ingress host name
  hostname: ''
  ## @param ingress.path Streamvisor ingress path
  path: '/'

## @section Streamvisor license
## @descriptionStart
## Add the content of your license file under the license property to automatically wire up the license file as a mounted secret
## @descriptionEnd
## @param license Streamvisor license file content
## e.g.
## license: |
##  -----BEGIN LICENSE FILE-----
##  eyJlbmMiOiJleUprWVhSaElqcDdJbWxrSWpvaVptSTBNVFZrTlRBdFpUaGha
##  ...
##  -----END LICENSE FILE-----
license: |
